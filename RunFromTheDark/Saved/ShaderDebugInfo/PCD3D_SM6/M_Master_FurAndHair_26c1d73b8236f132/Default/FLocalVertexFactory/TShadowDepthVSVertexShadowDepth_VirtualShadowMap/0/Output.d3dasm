;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; ATTRIBUTE                0   xyzw        0     NONE   float   xyz 
; ATTRIBUTE               13   x           1     NONE    uint   x   
; SV_InstanceID            0   x           2   INSTID    uint   x   
; SV_VertexID              0   x           3   VERTID    uint   x   
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; TEXCOORD10_centroid      0   xyzw        0     NONE   float   xyzw
; TEXCOORD11_centroid      0   xyzw        1     NONE   float   xyzw
; COLOR                    0   xyzw        2     NONE   float   xyzw
; TEXCOORD                 0   xyzw        3     NONE   float   xyzw
; TEXCOORD                 8    y          4     NONE    uint    y  
; PRIMITIVE_ID             0   x           4     NONE    uint   x   
; TEXCOORD                 6   x           5     NONE   float   x   
; TEXCOORD                 7    yzw        5     NONE   float    yzw
; SV_Position              0   xyzw        6      POS   float   xyzw
; SV_ClipDistance          0   xyzw        7  CLIPDST   float   xyzw
;
; shader hash: ba5cd549b09290d2e3219bf23351f9c7
;
; Pipeline Runtime Information: 
;
; Vertex Shader
; OutputPositionPresent=1
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; ATTRIBUTE                0                              
; ATTRIBUTE               13                              
; SV_InstanceID            0                              
; SV_VertexID              0                              
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; TEXCOORD10_centroid      0                 linear       
; TEXCOORD11_centroid      0                 linear       
; COLOR                    0                 linear       
; TEXCOORD                 0                 linear       
; PRIMITIVE_ID             0        nointerpolation       
; TEXCOORD                 6                 linear       
; TEXCOORD                 7                 linear       
; TEXCOORD                 8        nointerpolation       
; SV_Position              0          noperspective       
; SV_ClipDistance          0                 linear       
;
; Buffer Definitions:
;
; cbuffer UniformBufferConstants_View
; {
;
;   struct hostlayout.UniformBufferConstants_View
;   {
;
;       row_major float4x4 View_TranslatedWorldToClip;; Offset:    0
;       row_major float4x4 View_RelativeWorldToClip;  ; Offset:   64
;       row_major float4x4 View_ClipToRelativeWorld;  ; Offset:  128
;       row_major float4x4 View_TranslatedWorldToView;; Offset:  192
;       row_major float4x4 View_ViewToTranslatedWorld;; Offset:  256
;       row_major float4x4 View_TranslatedWorldToCameraView;; Offset:  320
;       row_major float4x4 View_CameraViewToTranslatedWorld;; Offset:  384
;       row_major float4x4 View_ViewToClip;           ; Offset:  448
;       row_major float4x4 View_ViewToClipNoAA;       ; Offset:  512
;       row_major float4x4 View_ClipToView;           ; Offset:  576
;       row_major float4x4 View_ClipToTranslatedWorld;; Offset:  640
;       row_major float4x4 View_SVPositionToTranslatedWorld;; Offset:  704
;       row_major float4x4 View_ScreenToRelativeWorld;; Offset:  768
;       row_major float4x4 View_ScreenToTranslatedWorld;; Offset:  832
;       row_major float4x4 View_MobileMultiviewShadowTransform;; Offset:  896
;       float3 View_ViewTilePosition;                 ; Offset:  960
;       float PrePadding_View_972;                    ; Offset:  972
;       float3 View_MatrixTilePosition;               ; Offset:  976
;       float PrePadding_View_988;                    ; Offset:  988
;       float3 View_ViewForward;                      ; Offset:  992
;       float PrePadding_View_1004;                   ; Offset: 1004
;       float3 View_ViewUp;                           ; Offset: 1008
;       float PrePadding_View_1020;                   ; Offset: 1020
;       float3 View_ViewRight;                        ; Offset: 1024
;       float PrePadding_View_1036;                   ; Offset: 1036
;       float3 View_HMDViewNoRollUp;                  ; Offset: 1040
;       float PrePadding_View_1052;                   ; Offset: 1052
;       float3 View_HMDViewNoRollRight;               ; Offset: 1056
;       float PrePadding_View_1068;                   ; Offset: 1068
;       float4 View_InvDeviceZToWorldZTransform;      ; Offset: 1072
;       float4 View_ScreenPositionScaleBias;          ; Offset: 1088
;       float3 View_RelativeWorldCameraOrigin;        ; Offset: 1104
;       float PrePadding_View_1116;                   ; Offset: 1116
;       float3 View_TranslatedWorldCameraOrigin;      ; Offset: 1120
;       float PrePadding_View_1132;                   ; Offset: 1132
;       float3 View_RelativeWorldViewOrigin;          ; Offset: 1136
;       float PrePadding_View_1148;                   ; Offset: 1148
;       float3 View_RelativePreViewTranslation;       ; Offset: 1152
;       float PrePadding_View_1164;                   ; Offset: 1164
;       row_major float4x4 View_PrevViewToClip;       ; Offset: 1168
;       row_major float4x4 View_PrevClipToView;       ; Offset: 1232
;       row_major float4x4 View_PrevTranslatedWorldToClip;; Offset: 1296
;       row_major float4x4 View_PrevTranslatedWorldToView;; Offset: 1360
;       row_major float4x4 View_PrevViewToTranslatedWorld;; Offset: 1424
;       row_major float4x4 View_PrevTranslatedWorldToCameraView;; Offset: 1488
;       row_major float4x4 View_PrevCameraViewToTranslatedWorld;; Offset: 1552
;       float3 View_PrevTranslatedWorldCameraOrigin;  ; Offset: 1616
;       float PrePadding_View_1628;                   ; Offset: 1628
;       float3 View_PrevRelativeWorldCameraOrigin;    ; Offset: 1632
;       float PrePadding_View_1644;                   ; Offset: 1644
;       float3 View_PrevRelativeWorldViewOrigin;      ; Offset: 1648
;       float PrePadding_View_1660;                   ; Offset: 1660
;       float3 View_RelativePrevPreViewTranslation;   ; Offset: 1664
;       float PrePadding_View_1676;                   ; Offset: 1676
;       row_major float4x4 View_PrevClipToRelativeWorld;; Offset: 1680
;       row_major float4x4 View_PrevScreenToTranslatedWorld;; Offset: 1744
;       row_major float4x4 View_ClipToPrevClip;       ; Offset: 1808
;       row_major float4x4 View_ClipToPrevClipWithAA; ; Offset: 1872
;       float4 View_TemporalAAJitter;                 ; Offset: 1936
;       float4 View_GlobalClippingPlane;              ; Offset: 1952
;       float2 View_FieldOfViewWideAngles;            ; Offset: 1968
;       float2 View_PrevFieldOfViewWideAngles;        ; Offset: 1976
;       float4 View_ViewRectMin;                      ; Offset: 1984
;       float4 View_ViewSizeAndInvSize;               ; Offset: 2000
;       uint4 View_ViewRectMinAndSize;                ; Offset: 2016
;       float4 View_LightProbeSizeRatioAndInvSizeRatio;; Offset: 2032
;       float4 View_BufferSizeAndInvSize;             ; Offset: 2048
;       float4 View_BufferBilinearUVMinMax;           ; Offset: 2064
;       float4 View_ScreenToViewSpace;                ; Offset: 2080
;       float2 View_BufferToSceneTextureScale;        ; Offset: 2096
;       float2 View_ResolutionFractionAndInv;         ; Offset: 2104
;       int View_NumSceneColorMSAASamples;            ; Offset: 2112
;       float View_ProjectionDepthThicknessScale;     ; Offset: 2116
;       float View_PreExposure;                       ; Offset: 2120
;       float View_OneOverPreExposure;                ; Offset: 2124
;       float4 View_DiffuseOverrideParameter;         ; Offset: 2128
;       float4 View_SpecularOverrideParameter;        ; Offset: 2144
;       float4 View_NormalOverrideParameter;          ; Offset: 2160
;       float2 View_RoughnessOverrideParameter;       ; Offset: 2176
;       float View_PrevFrameGameTime;                 ; Offset: 2184
;       float View_PrevFrameRealTime;                 ; Offset: 2188
;       float View_OutOfBoundsMask;                   ; Offset: 2192
;       float PrePadding_View_2196;                   ; Offset: 2196
;       float PrePadding_View_2200;                   ; Offset: 2200
;       float PrePadding_View_2204;                   ; Offset: 2204
;       float3 View_WorldCameraMovementSinceLastFrame;; Offset: 2208
;       float View_CullingSign;                       ; Offset: 2220
;       float View_NearPlane;                         ; Offset: 2224
;       float View_GameTime;                          ; Offset: 2228
;       float View_RealTime;                          ; Offset: 2232
;       float View_DeltaTime;                         ; Offset: 2236
;       float View_MaterialTextureMipBias;            ; Offset: 2240
;       float View_MaterialTextureDerivativeMultiply; ; Offset: 2244
;       uint View_Random;                             ; Offset: 2248
;       uint View_FrameNumber;                        ; Offset: 2252
;       uint View_FrameCounter;                       ; Offset: 2256
;       uint View_StateFrameIndexMod8;                ; Offset: 2260
;       uint View_StateFrameIndex;                    ; Offset: 2264
;       uint View_DebugViewModeMask;                  ; Offset: 2268
;       uint View_WorldIsPaused;                      ; Offset: 2272
;       float View_CameraCut;                         ; Offset: 2276
;       float View_UnlitViewmodeMask;                 ; Offset: 2280
;       float PrePadding_View_2284;                   ; Offset: 2284
;       float4 View_DirectionalLightColor;            ; Offset: 2288
;       float3 View_DirectionalLightDirection;        ; Offset: 2304
;       float PrePadding_View_2316;                   ; Offset: 2316
;       float4 View_TranslucencyLightingVolumeMin[2]; ; Offset: 2320
;       float4 View_TranslucencyLightingVolumeInvSize[2];; Offset: 2352
;       float4 View_TemporalAAParams;                 ; Offset: 2384
;       float4 View_CircleDOFParams;                  ; Offset: 2400
;       float View_DepthOfFieldSensorWidth;           ; Offset: 2416
;       float View_DepthOfFieldFocalDistance;         ; Offset: 2420
;       float View_DepthOfFieldScale;                 ; Offset: 2424
;       float View_DepthOfFieldFocalLength;           ; Offset: 2428
;       float View_DepthOfFieldFocalRegion;           ; Offset: 2432
;       float View_DepthOfFieldNearTransitionRegion;  ; Offset: 2436
;       float View_DepthOfFieldFarTransitionRegion;   ; Offset: 2440
;       float View_MotionBlurNormalizedToPixel;       ; Offset: 2444
;       float View_GeneralPurposeTweak;               ; Offset: 2448
;       float View_GeneralPurposeTweak2;              ; Offset: 2452
;       float View_DemosaicVposOffset;                ; Offset: 2456
;       float View_DecalDepthBias;                    ; Offset: 2460
;       float3 View_IndirectLightingColorScale;       ; Offset: 2464
;       float PrePadding_View_2476;                   ; Offset: 2476
;       float3 View_PrecomputedIndirectLightingColorScale;; Offset: 2480
;       float PrePadding_View_2492;                   ; Offset: 2492
;       float3 View_PrecomputedIndirectSpecularColorScale;; Offset: 2496
;       float PrePadding_View_2508;                   ; Offset: 2508
;       float4 View_AtmosphereLightDirection[2];      ; Offset: 2512
;       float4 View_AtmosphereLightIlluminanceOnGroundPostTransmittance[2];; Offset: 2544
;       float4 View_AtmosphereLightIlluminanceOuterSpace[2];; Offset: 2576
;       float4 View_AtmosphereLightDiscLuminance[2];  ; Offset: 2608
;       float4 View_AtmosphereLightDiscCosHalfApexAngle_PPTrans[2];; Offset: 2640
;       float4 View_SkyViewLutSizeAndInvSize;         ; Offset: 2672
;       float3 View_SkyCameraTranslatedWorldOrigin;   ; Offset: 2688
;       float PrePadding_View_2700;                   ; Offset: 2700
;       float4 View_SkyPlanetTranslatedWorldCenterAndViewHeight;; Offset: 2704
;       row_major float4x4 View_SkyViewLutReferential;; Offset: 2720
;       float4 View_SkyAtmosphereSkyLuminanceFactor;  ; Offset: 2784
;       float View_SkyAtmospherePresentInScene;       ; Offset: 2800
;       float View_SkyAtmosphereHeightFogContribution;; Offset: 2804
;       float View_SkyAtmosphereBottomRadiusKm;       ; Offset: 2808
;       float View_SkyAtmosphereTopRadiusKm;          ; Offset: 2812
;       float4 View_SkyAtmosphereCameraAerialPerspectiveVolumeSizeAndInvSize;; Offset: 2816
;       float View_SkyAtmosphereAerialPerspectiveStartDepthKm;; Offset: 2832
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolution;; Offset: 2836
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolutionInv;; Offset: 2840
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKm;; Offset: 2844
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKmInv;; Offset: 2848
;       float View_SkyAtmosphereApplyCameraAerialPerspectiveVolume;; Offset: 2852
;       float PrePadding_View_2856;                   ; Offset: 2856
;       float PrePadding_View_2860;                   ; Offset: 2860
;       float3 View_NormalCurvatureToRoughnessScaleBias;; Offset: 2864
;       float View_RenderingReflectionCaptureMask;    ; Offset: 2876
;       float View_RealTimeReflectionCapture;         ; Offset: 2880
;       float View_RealTimeReflectionCapturePreExposure;; Offset: 2884
;       float PrePadding_View_2888;                   ; Offset: 2888
;       float PrePadding_View_2892;                   ; Offset: 2892
;       float4 View_AmbientCubemapTint;               ; Offset: 2896
;       float View_AmbientCubemapIntensity;           ; Offset: 2912
;       float View_SkyLightApplyPrecomputedBentNormalShadowingFlag;; Offset: 2916
;       float View_SkyLightAffectReflectionFlag;      ; Offset: 2920
;       float View_SkyLightAffectGlobalIlluminationFlag;; Offset: 2924
;       float4 View_SkyLightColor;                    ; Offset: 2928
;       float4 View_MobileSkyIrradianceEnvironmentMap[8];; Offset: 2944
;       float View_MobilePreviewMode;                 ; Offset: 3072
;       float View_HMDEyePaddingOffset;               ; Offset: 3076
;       float View_ReflectionCubemapMaxMip;           ; Offset: 3080
;       float View_ShowDecalsMask;                    ; Offset: 3084
;       uint View_DistanceFieldAOSpecularOcclusionMode;; Offset: 3088
;       float View_IndirectCapsuleSelfShadowingIntensity;; Offset: 3092
;       float PrePadding_View_3096;                   ; Offset: 3096
;       float PrePadding_View_3100;                   ; Offset: 3100
;       float3 View_ReflectionEnvironmentRoughnessMixingScaleBiasAndLargestWeight;; Offset: 3104
;       int View_StereoPassIndex;                     ; Offset: 3116
;       float4 View_GlobalVolumeTranslatedCenterAndExtent[6];; Offset: 3120
;       float4 View_GlobalVolumeTranslatedWorldToUVAddAndMul[6];; Offset: 3216
;       float4 View_GlobalDistanceFieldMipTranslatedWorldToUVScale[6];; Offset: 3312
;       float4 View_GlobalDistanceFieldMipTranslatedWorldToUVBias[6];; Offset: 3408
;       float View_GlobalDistanceFieldMipFactor;      ; Offset: 3504
;       float View_GlobalDistanceFieldMipTransition;  ; Offset: 3508
;       int View_GlobalDistanceFieldClipmapSizeInPages;; Offset: 3512
;       int PrePadding_View_3516;                     ; Offset: 3516
;       float3 View_GlobalDistanceFieldInvPageAtlasSize;; Offset: 3520
;       float PrePadding_View_3532;                   ; Offset: 3532
;       float3 View_GlobalDistanceFieldInvCoverageAtlasSize;; Offset: 3536
;       float View_GlobalVolumeDimension;             ; Offset: 3548
;       float View_GlobalVolumeTexelSize;             ; Offset: 3552
;       float View_MaxGlobalDFAOConeDistance;         ; Offset: 3556
;       uint View_NumGlobalSDFClipmaps;               ; Offset: 3560
;       float View_CoveredExpandSurfaceScale;         ; Offset: 3564
;       float View_NotCoveredExpandSurfaceScale;      ; Offset: 3568
;       float View_NotCoveredMinStepScale;            ; Offset: 3572
;       float View_DitheredTransparencyStepThreshold; ; Offset: 3576
;       float View_DitheredTransparencyTraceThreshold;; Offset: 3580
;       int2 View_CursorPosition;                     ; Offset: 3584
;       float View_bCheckerboardSubsurfaceProfileRendering;; Offset: 3592
;       float PrePadding_View_3596;                   ; Offset: 3596
;       float3 View_VolumetricFogInvGridSize;         ; Offset: 3600
;       float PrePadding_View_3612;                   ; Offset: 3612
;       float3 View_VolumetricFogGridZParams;         ; Offset: 3616
;       float PrePadding_View_3628;                   ; Offset: 3628
;       float2 View_VolumetricFogSVPosToVolumeUV;     ; Offset: 3632
;       float2 View_VolumetricFogViewGridUVToPrevViewRectUV;; Offset: 3640
;       float2 View_VolumetricFogPrevViewGridRectUVToResourceUV;; Offset: 3648
;       float2 View_VolumetricFogPrevUVMax;           ; Offset: 3656
;       float2 View_VolumetricFogScreenToResourceUV;  ; Offset: 3664
;       float2 View_VolumetricFogUVMax;               ; Offset: 3672
;       float View_VolumetricFogMaxDistance;          ; Offset: 3680
;       float PrePadding_View_3684;                   ; Offset: 3684
;       float PrePadding_View_3688;                   ; Offset: 3688
;       float PrePadding_View_3692;                   ; Offset: 3692
;       float3 View_VolumetricLightmapWorldToUVScale; ; Offset: 3696
;       float PrePadding_View_3708;                   ; Offset: 3708
;       float3 View_VolumetricLightmapWorldToUVAdd;   ; Offset: 3712
;       float PrePadding_View_3724;                   ; Offset: 3724
;       float3 View_VolumetricLightmapIndirectionTextureSize;; Offset: 3728
;       float View_VolumetricLightmapBrickSize;       ; Offset: 3740
;       float3 View_VolumetricLightmapBrickTexelSize; ; Offset: 3744
;       float View_IndirectLightingCacheShowFlag;     ; Offset: 3756
;       float View_EyeToPixelSpreadAngle;             ; Offset: 3760
;       float PrePadding_View_3764;                   ; Offset: 3764
;       float PrePadding_View_3768;                   ; Offset: 3768
;       float PrePadding_View_3772;                   ; Offset: 3772
;       float4 View_XRPassthroughCameraUVs[2];        ; Offset: 3776
;       float View_GlobalVirtualTextureMipBias;       ; Offset: 3808
;       uint View_VirtualTextureFeedbackShift;        ; Offset: 3812
;       uint View_VirtualTextureFeedbackMask;         ; Offset: 3816
;       uint View_VirtualTextureFeedbackStride;       ; Offset: 3820
;       uint View_VirtualTextureFeedbackJitterOffset; ; Offset: 3824
;       uint View_VirtualTextureFeedbackSampleOffset; ; Offset: 3828
;       uint PrePadding_View_3832;                    ; Offset: 3832
;       uint PrePadding_View_3836;                    ; Offset: 3836
;       float4 View_RuntimeVirtualTextureMipLevel;    ; Offset: 3840
;       float2 View_RuntimeVirtualTexturePackHeight;  ; Offset: 3856
;       float PrePadding_View_3864;                   ; Offset: 3864
;       float PrePadding_View_3868;                   ; Offset: 3868
;       float4 View_RuntimeVirtualTextureDebugParams; ; Offset: 3872
;       float View_OverrideLandscapeLOD;              ; Offset: 3888
;       int View_FarShadowStaticMeshLODBias;          ; Offset: 3892
;       float View_MinRoughness;                      ; Offset: 3896
;       float PrePadding_View_3900;                   ; Offset: 3900
;       float4 View_HairRenderInfo;                   ; Offset: 3904
;       uint View_EnableSkyLight;                     ; Offset: 3920
;       uint View_HairRenderInfoBits;                 ; Offset: 3924
;       uint View_HairComponents;                     ; Offset: 3928
;       float View_bSubsurfacePostprocessEnabled;     ; Offset: 3932
;       float4 View_SSProfilesTextureSizeAndInvSize;  ; Offset: 3936
;       float4 View_SSProfilesPreIntegratedTextureSizeAndInvSize;; Offset: 3952
;       float4 View_SpecularProfileTextureSizeAndInvSize;; Offset: 3968
;       float3 View_PhysicsFieldClipmapCenter;        ; Offset: 3984
;       float View_PhysicsFieldClipmapDistance;       ; Offset: 3996
;       int View_PhysicsFieldClipmapResolution;       ; Offset: 4000
;       int View_PhysicsFieldClipmapExponent;         ; Offset: 4004
;       int View_PhysicsFieldClipmapCount;            ; Offset: 4008
;       int View_PhysicsFieldTargetCount;             ; Offset: 4012
;       int4 View_PhysicsFieldTargets[32];            ; Offset: 4016
;       uint View_GPUSceneViewId;                     ; Offset: 4528
;       float View_ViewResolutionFraction;            ; Offset: 4532
;       float View_SubSurfaceColorAsTransmittanceAtDistanceInMeters;; Offset: 4536
;       float PrePadding_View_4540;                   ; Offset: 4540
;       float4 View_TanAndInvTanHalfFOV;              ; Offset: 4544
;       float4 View_PrevTanAndInvTanHalfFOV;          ; Offset: 4560
;       float4 View_GlintLUTParameters0;              ; Offset: 4576
;       float4 View_GlintLUTParameters1;              ; Offset: 4592
;       uint BindlessSampler_View_MaterialTextureBilinearWrapedSampler;; Offset: 4608
;       uint PrePadding_View_4612;                    ; Offset: 4612
;       uint BindlessSampler_View_MaterialTextureBilinearClampedSampler;; Offset: 4616
;       uint PrePadding_View_4620;                    ; Offset: 4620
;       uint BindlessResource_View_VolumetricLightmapIndirectionTexture;; Offset: 4624
;       uint PrePadding_View_4628;                    ; Offset: 4628
;       uint BindlessResource_View_VolumetricLightmapBrickAmbientVector;; Offset: 4632
;       uint PrePadding_View_4636;                    ; Offset: 4636
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients0;; Offset: 4640
;       uint PrePadding_View_4644;                    ; Offset: 4644
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients1;; Offset: 4648
;       uint PrePadding_View_4652;                    ; Offset: 4652
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients2;; Offset: 4656
;       uint PrePadding_View_4660;                    ; Offset: 4660
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients3;; Offset: 4664
;       uint PrePadding_View_4668;                    ; Offset: 4668
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients4;; Offset: 4672
;       uint PrePadding_View_4676;                    ; Offset: 4676
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients5;; Offset: 4680
;       uint PrePadding_View_4684;                    ; Offset: 4684
;       uint BindlessResource_View_SkyBentNormalBrickTexture;; Offset: 4688
;       uint PrePadding_View_4692;                    ; Offset: 4692
;       uint BindlessResource_View_DirectionalLightShadowingBrickTexture;; Offset: 4696
;       uint PrePadding_View_4700;                    ; Offset: 4700
;       uint BindlessSampler_View_VolumetricLightmapBrickAmbientVectorSampler;; Offset: 4704
;       uint PrePadding_View_4708;                    ; Offset: 4708
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler0;; Offset: 4712
;       uint PrePadding_View_4716;                    ; Offset: 4716
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler1;; Offset: 4720
;       uint PrePadding_View_4724;                    ; Offset: 4724
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler2;; Offset: 4728
;       uint PrePadding_View_4732;                    ; Offset: 4732
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler3;; Offset: 4736
;       uint PrePadding_View_4740;                    ; Offset: 4740
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler4;; Offset: 4744
;       uint PrePadding_View_4748;                    ; Offset: 4748
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler5;; Offset: 4752
;       uint PrePadding_View_4756;                    ; Offset: 4756
;       uint BindlessSampler_View_SkyBentNormalTextureSampler;; Offset: 4760
;       uint PrePadding_View_4764;                    ; Offset: 4764
;       uint BindlessSampler_View_DirectionalLightShadowingTextureSampler;; Offset: 4768
;       uint PrePadding_View_4772;                    ; Offset: 4772
;       uint BindlessResource_View_GlobalDistanceFieldPageAtlasTexture;; Offset: 4776
;       uint PrePadding_View_4780;                    ; Offset: 4780
;       uint BindlessResource_View_GlobalDistanceFieldCoverageAtlasTexture;; Offset: 4784
;       uint PrePadding_View_4788;                    ; Offset: 4788
;       uint BindlessResource_View_GlobalDistanceFieldPageTableTexture;; Offset: 4792
;       uint PrePadding_View_4796;                    ; Offset: 4796
;       uint BindlessResource_View_GlobalDistanceFieldMipTexture;; Offset: 4800
;       uint PrePadding_View_4804;                    ; Offset: 4804
;       uint BindlessSampler_View_GlobalDistanceFieldPageAtlasTextureSampler;; Offset: 4808
;       uint PrePadding_View_4812;                    ; Offset: 4812
;       uint BindlessSampler_View_GlobalDistanceFieldCoverageAtlasTextureSampler;; Offset: 4816
;       uint PrePadding_View_4820;                    ; Offset: 4820
;       uint BindlessSampler_View_GlobalDistanceFieldMipTextureSampler;; Offset: 4824
;       uint PrePadding_View_4828;                    ; Offset: 4828
;       uint BindlessResource_View_AtmosphereTransmittanceTexture;; Offset: 4832
;       uint PrePadding_View_4836;                    ; Offset: 4836
;       uint BindlessSampler_View_AtmosphereTransmittanceTextureSampler;; Offset: 4840
;       uint PrePadding_View_4844;                    ; Offset: 4844
;       uint BindlessResource_View_AtmosphereIrradianceTexture;; Offset: 4848
;       uint PrePadding_View_4852;                    ; Offset: 4852
;       uint BindlessSampler_View_AtmosphereIrradianceTextureSampler;; Offset: 4856
;       uint PrePadding_View_4860;                    ; Offset: 4860
;       uint BindlessResource_View_AtmosphereInscatterTexture;; Offset: 4864
;       uint PrePadding_View_4868;                    ; Offset: 4868
;       uint BindlessSampler_View_AtmosphereInscatterTextureSampler;; Offset: 4872
;       uint PrePadding_View_4876;                    ; Offset: 4876
;       uint BindlessResource_View_PerlinNoiseGradientTexture;; Offset: 4880
;       uint PrePadding_View_4884;                    ; Offset: 4884
;       uint BindlessSampler_View_PerlinNoiseGradientTextureSampler;; Offset: 4888
;       uint PrePadding_View_4892;                    ; Offset: 4892
;       uint BindlessResource_View_PerlinNoise3DTexture;; Offset: 4896
;       uint PrePadding_View_4900;                    ; Offset: 4900
;       uint BindlessSampler_View_PerlinNoise3DTextureSampler;; Offset: 4904
;       uint PrePadding_View_4908;                    ; Offset: 4908
;       uint BindlessResource_View_SobolSamplingTexture;; Offset: 4912
;       uint PrePadding_View_4916;                    ; Offset: 4916
;       uint BindlessSampler_View_SharedPointWrappedSampler;; Offset: 4920
;       uint PrePadding_View_4924;                    ; Offset: 4924
;       uint BindlessSampler_View_SharedPointClampedSampler;; Offset: 4928
;       uint PrePadding_View_4932;                    ; Offset: 4932
;       uint BindlessSampler_View_SharedBilinearWrappedSampler;; Offset: 4936
;       uint PrePadding_View_4940;                    ; Offset: 4940
;       uint BindlessSampler_View_SharedBilinearClampedSampler;; Offset: 4944
;       uint PrePadding_View_4948;                    ; Offset: 4948
;       uint BindlessSampler_View_SharedBilinearAnisoClampedSampler;; Offset: 4952
;       uint PrePadding_View_4956;                    ; Offset: 4956
;       uint BindlessSampler_View_SharedTrilinearWrappedSampler;; Offset: 4960
;       uint PrePadding_View_4964;                    ; Offset: 4964
;       uint BindlessSampler_View_SharedTrilinearClampedSampler;; Offset: 4968
;       uint PrePadding_View_4972;                    ; Offset: 4972
;       uint BindlessResource_View_PreIntegratedBRDF; ; Offset: 4976
;       uint PrePadding_View_4980;                    ; Offset: 4980
;       uint BindlessSampler_View_PreIntegratedBRDFSampler;; Offset: 4984
;       uint PrePadding_View_4988;                    ; Offset: 4988
;       uint BindlessResource_View_SkyIrradianceEnvironmentMap;; Offset: 4992
;       uint PrePadding_View_4996;                    ; Offset: 4996
;       uint BindlessResource_View_TransmittanceLutTexture;; Offset: 5000
;       uint PrePadding_View_5004;                    ; Offset: 5004
;       uint BindlessSampler_View_TransmittanceLutTextureSampler;; Offset: 5008
;       uint PrePadding_View_5012;                    ; Offset: 5012
;       uint BindlessResource_View_SkyViewLutTexture; ; Offset: 5016
;       uint PrePadding_View_5020;                    ; Offset: 5020
;       uint BindlessSampler_View_SkyViewLutTextureSampler;; Offset: 5024
;       uint PrePadding_View_5028;                    ; Offset: 5028
;       uint BindlessResource_View_DistantSkyLightLutTexture;; Offset: 5032
;       uint PrePadding_View_5036;                    ; Offset: 5036
;       uint BindlessSampler_View_DistantSkyLightLutTextureSampler;; Offset: 5040
;       uint PrePadding_View_5044;                    ; Offset: 5044
;       uint BindlessResource_View_CameraAerialPerspectiveVolume;; Offset: 5048
;       uint PrePadding_View_5052;                    ; Offset: 5052
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeSampler;; Offset: 5056
;       uint PrePadding_View_5060;                    ; Offset: 5060
;       uint BindlessResource_View_CameraAerialPerspectiveVolumeMieOnly;; Offset: 5064
;       uint PrePadding_View_5068;                    ; Offset: 5068
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeMieOnlySampler;; Offset: 5072
;       uint PrePadding_View_5076;                    ; Offset: 5076
;       uint BindlessResource_View_CameraAerialPerspectiveVolumeRayOnly;; Offset: 5080
;       uint PrePadding_View_5084;                    ; Offset: 5084
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeRayOnlySampler;; Offset: 5088
;       uint PrePadding_View_5092;                    ; Offset: 5092
;       uint BindlessResource_View_HairScatteringLUTTexture;; Offset: 5096
;       uint PrePadding_View_5100;                    ; Offset: 5100
;       uint BindlessSampler_View_HairScatteringLUTSampler;; Offset: 5104
;       uint PrePadding_View_5108;                    ; Offset: 5108
;       uint BindlessResource_View_GGXLTCMatTexture;  ; Offset: 5112
;       uint PrePadding_View_5116;                    ; Offset: 5116
;       uint BindlessSampler_View_GGXLTCMatSampler;   ; Offset: 5120
;       uint PrePadding_View_5124;                    ; Offset: 5124
;       uint BindlessResource_View_GGXLTCAmpTexture;  ; Offset: 5128
;       uint PrePadding_View_5132;                    ; Offset: 5132
;       uint BindlessSampler_View_GGXLTCAmpSampler;   ; Offset: 5136
;       uint PrePadding_View_5140;                    ; Offset: 5140
;       uint BindlessResource_View_SheenLTCTexture;   ; Offset: 5144
;       uint PrePadding_View_5148;                    ; Offset: 5148
;       uint BindlessSampler_View_SheenLTCSampler;    ; Offset: 5152
;       uint PrePadding_View_5156;                    ; Offset: 5156
;       uint View_bShadingEnergyConservation;         ; Offset: 5160
;       uint View_bShadingEnergyPreservation;         ; Offset: 5164
;       uint BindlessResource_View_ShadingEnergyGGXSpecTexture;; Offset: 5168
;       uint PrePadding_View_5172;                    ; Offset: 5172
;       uint BindlessResource_View_ShadingEnergyGGXGlassTexture;; Offset: 5176
;       uint PrePadding_View_5180;                    ; Offset: 5180
;       uint BindlessResource_View_ShadingEnergyClothSpecTexture;; Offset: 5184
;       uint PrePadding_View_5188;                    ; Offset: 5188
;       uint BindlessResource_View_ShadingEnergyDiffuseTexture;; Offset: 5192
;       uint PrePadding_View_5196;                    ; Offset: 5196
;       uint BindlessSampler_View_ShadingEnergySampler;; Offset: 5200
;       uint PrePadding_View_5204;                    ; Offset: 5204
;       uint BindlessResource_View_GlintTexture;      ; Offset: 5208
;       uint PrePadding_View_5212;                    ; Offset: 5212
;       uint BindlessSampler_View_GlintSampler;       ; Offset: 5216
;       uint PrePadding_View_5220;                    ; Offset: 5220
;       uint BindlessResource_View_SimpleVolumeTexture;; Offset: 5224
;       uint PrePadding_View_5228;                    ; Offset: 5228
;       uint BindlessSampler_View_SimpleVolumeTextureSampler;; Offset: 5232
;       uint PrePadding_View_5236;                    ; Offset: 5236
;       uint BindlessResource_View_SimpleVolumeEnvTexture;; Offset: 5240
;       uint PrePadding_View_5244;                    ; Offset: 5244
;       uint BindlessSampler_View_SimpleVolumeEnvTextureSampler;; Offset: 5248
;       uint PrePadding_View_5252;                    ; Offset: 5252
;       uint BindlessResource_View_SSProfilesTexture; ; Offset: 5256
;       uint PrePadding_View_5260;                    ; Offset: 5260
;       uint BindlessSampler_View_SSProfilesSampler;  ; Offset: 5264
;       uint PrePadding_View_5268;                    ; Offset: 5268
;       uint BindlessSampler_View_SSProfilesTransmissionSampler;; Offset: 5272
;       uint PrePadding_View_5276;                    ; Offset: 5276
;       uint BindlessResource_View_SSProfilesPreIntegratedTexture;; Offset: 5280
;       uint PrePadding_View_5284;                    ; Offset: 5284
;       uint BindlessSampler_View_SSProfilesPreIntegratedSampler;; Offset: 5288
;       uint PrePadding_View_5292;                    ; Offset: 5292
;       uint BindlessResource_View_SpecularProfileTexture;; Offset: 5296
;       uint PrePadding_View_5300;                    ; Offset: 5300
;       uint BindlessSampler_View_SpecularProfileSampler;; Offset: 5304
;       uint PrePadding_View_5308;                    ; Offset: 5308
;       uint BindlessResource_View_WaterIndirection;  ; Offset: 5312
;       uint PrePadding_View_5316;                    ; Offset: 5316
;       uint BindlessResource_View_WaterData;         ; Offset: 5320
;       uint PrePadding_View_5324;                    ; Offset: 5324
;       float4 View_RectLightAtlasSizeAndInvSize;     ; Offset: 5328
;       float View_RectLightAtlasMaxMipLevel;         ; Offset: 5344
;       float PrePadding_View_5348;                   ; Offset: 5348
;       uint BindlessResource_View_RectLightAtlasTexture;; Offset: 5352
;       uint PrePadding_View_5356;                    ; Offset: 5356
;       uint BindlessSampler_View_RectLightAtlasSampler;; Offset: 5360
;       uint PrePadding_View_5364;                    ; Offset: 5364
;       uint PrePadding_View_5368;                    ; Offset: 5368
;       uint PrePadding_View_5372;                    ; Offset: 5372
;       float4 View_IESAtlasSizeAndInvSize;           ; Offset: 5376
;       uint BindlessResource_View_IESAtlasTexture;   ; Offset: 5392
;       uint PrePadding_View_5396;                    ; Offset: 5396
;       uint BindlessSampler_View_IESAtlasSampler;    ; Offset: 5400
;       uint PrePadding_View_5404;                    ; Offset: 5404
;       uint BindlessSampler_View_LandscapeWeightmapSampler;; Offset: 5408
;       uint PrePadding_View_5412;                    ; Offset: 5412
;       uint BindlessResource_View_LandscapeIndirection;; Offset: 5416
;       uint PrePadding_View_5420;                    ; Offset: 5420
;       uint BindlessResource_View_LandscapePerComponentData;; Offset: 5424
;       uint PrePadding_View_5428;                    ; Offset: 5428
;       uint BindlessResource_View_VTFeedbackBuffer;  ; Offset: 5432
;       uint PrePadding_View_5436;                    ; Offset: 5436
;       uint BindlessResource_View_PhysicsFieldClipmapBuffer;; Offset: 5440
;       uint PrePadding_View_5444;                    ; Offset: 5444
;       uint PrePadding_View_5448;                    ; Offset: 5448
;       uint PrePadding_View_5452;                    ; Offset: 5452
;       float3 View_TLASRelativePreViewTranslation;   ; Offset: 5456
;       float PrePadding_View_5468;                   ; Offset: 5468
;       float3 View_TLASViewTilePosition;             ; Offset: 5472
;   
;   } UniformBufferConstants_View;                    ; Offset:    0 Size:  5484
;
; }
;
; cbuffer UniformBufferConstants_Scene
; {
;
;   struct UniformBufferConstants_Scene
;   {
;
;       uint BindlessResource_Scene_GPUScene_GPUSceneInstanceSceneData;; Offset:    0
;       uint PrePadding_Scene_GPUScene_4;             ; Offset:    4
;       uint BindlessResource_Scene_GPUScene_GPUSceneInstancePayloadData;; Offset:    8
;       uint PrePadding_Scene_GPUScene_12;            ; Offset:   12
;       uint BindlessResource_Scene_GPUScene_GPUScenePrimitiveSceneData;; Offset:   16
;       uint PrePadding_Scene_GPUScene_20;            ; Offset:   20
;       uint BindlessResource_Scene_GPUScene_GPUSceneLightmapData;; Offset:   24
;       uint PrePadding_Scene_GPUScene_28;            ; Offset:   28
;       uint BindlessResource_Scene_GPUScene_GPUSceneLightData;; Offset:   32
;       uint PrePadding_Scene_GPUScene_36;            ; Offset:   36
;       uint Scene_GPUScene_InstanceDataSOAStride;    ; Offset:   40
;       uint Scene_GPUScene_GPUSceneFrameNumber;      ; Offset:   44
;       int Scene_GPUScene_NumInstances;              ; Offset:   48
;       int Scene_GPUScene_NumScenePrimitives;        ; Offset:   52
;   
;   } UniformBufferConstants_Scene;                   ; Offset:    0 Size:    56
;
; }
;
; cbuffer UniformBufferConstants_ShadowDepthPass
; {
;
;   struct hostlayout.UniformBufferConstants_ShadowDepthPass
;   {
;
;       uint BindlessResource_ShadowDepthPass_SceneTextures_SceneColorTexture;; Offset:    0
;       uint PrePadding_ShadowDepthPass_SceneTextures_4;; Offset:    4
;       uint BindlessResource_ShadowDepthPass_SceneTextures_SceneDepthTexture;; Offset:    8
;       uint PrePadding_ShadowDepthPass_SceneTextures_12;; Offset:   12
;       uint BindlessResource_ShadowDepthPass_SceneTextures_ScenePartialDepthTexture;; Offset:   16
;       uint PrePadding_ShadowDepthPass_SceneTextures_20;; Offset:   20
;       uint BindlessResource_ShadowDepthPass_SceneTextures_GBufferATexture;; Offset:   24
;       uint PrePadding_ShadowDepthPass_SceneTextures_28;; Offset:   28
;       uint BindlessResource_ShadowDepthPass_SceneTextures_GBufferBTexture;; Offset:   32
;       uint PrePadding_ShadowDepthPass_SceneTextures_36;; Offset:   36
;       uint BindlessResource_ShadowDepthPass_SceneTextures_GBufferCTexture;; Offset:   40
;       uint PrePadding_ShadowDepthPass_SceneTextures_44;; Offset:   44
;       uint BindlessResource_ShadowDepthPass_SceneTextures_GBufferDTexture;; Offset:   48
;       uint PrePadding_ShadowDepthPass_SceneTextures_52;; Offset:   52
;       uint BindlessResource_ShadowDepthPass_SceneTextures_GBufferETexture;; Offset:   56
;       uint PrePadding_ShadowDepthPass_SceneTextures_60;; Offset:   60
;       uint BindlessResource_ShadowDepthPass_SceneTextures_GBufferFTexture;; Offset:   64
;       uint PrePadding_ShadowDepthPass_SceneTextures_68;; Offset:   68
;       uint BindlessResource_ShadowDepthPass_SceneTextures_GBufferVelocityTexture;; Offset:   72
;       uint PrePadding_ShadowDepthPass_SceneTextures_76;; Offset:   76
;       uint BindlessResource_ShadowDepthPass_SceneTextures_ScreenSpaceAOTexture;; Offset:   80
;       uint PrePadding_ShadowDepthPass_SceneTextures_84;; Offset:   84
;       uint BindlessResource_ShadowDepthPass_SceneTextures_CustomDepthTexture;; Offset:   88
;       uint PrePadding_ShadowDepthPass_SceneTextures_92;; Offset:   92
;       uint BindlessResource_ShadowDepthPass_SceneTextures_CustomStencilTexture;; Offset:   96
;       uint PrePadding_ShadowDepthPass_SceneTextures_100;; Offset:  100
;       uint BindlessSampler_ShadowDepthPass_SceneTextures_PointClampSampler;; Offset:  104
;       float PrePadding_ShadowDepthPass_108;         ; Offset:  108
;       row_major float4x4 ShadowDepthPass_ProjectionMatrix;; Offset:  112
;       row_major float4x4 ShadowDepthPass_ViewMatrix;; Offset:  176
;       float4 ShadowDepthPass_ShadowParams;          ; Offset:  240
;       float ShadowDepthPass_bClampToNearPlane;      ; Offset:  256
;       float PrePadding_ShadowDepthPass_260;         ; Offset:  260
;       float PrePadding_ShadowDepthPass_264;         ; Offset:  264
;       float PrePadding_ShadowDepthPass_268;         ; Offset:  268
;       row_major float4x4 ShadowDepthPass_ShadowViewProjectionMatrices[6];; Offset:  272
;       row_major float4x4 ShadowDepthPass_ShadowViewMatrices[6];; Offset:  656
;       int ShadowDepthPass_bRenderToVirtualShadowMap;; Offset: 1040
;       int PrePadding_ShadowDepthPass_1044;          ; Offset: 1044
;       uint BindlessResource_ShadowDepthPass_VirtualSmPageTable;; Offset: 1048
;       uint PrePadding_ShadowDepthPass_1052;         ; Offset: 1052
;       uint BindlessResource_ShadowDepthPass_PackedNaniteViews;; Offset: 1056
;       uint PrePadding_ShadowDepthPass_1060;         ; Offset: 1060
;       uint BindlessResource_ShadowDepthPass_PageRectBounds;; Offset: 1064
;       uint PrePadding_ShadowDepthPass_1068;         ; Offset: 1068
;       uint BindlessResource_ShadowDepthPass_OutDepthBufferArray;; Offset: 1072
;   
;   } UniformBufferConstants_ShadowDepthPass;         ; Offset:    0 Size:  1076
;
; }
;
; cbuffer UniformBufferConstants_LocalVF
; {
;
;   struct UniformBufferConstants_LocalVF
;   {
;
;       int4 LocalVF_VertexFetch_Parameters;          ; Offset:    0
;       int LocalVF_PreSkinBaseVertexIndex;           ; Offset:   16
;       uint LocalVF_LODLightmapDataIndex;            ; Offset:   20
;       uint BindlessResource_LocalVF_VertexFetch_TexCoordBuffer;; Offset:   24
;       uint PrePadding_LocalVF_28;                   ; Offset:   28
;       uint BindlessResource_LocalVF_VertexFetch_PositionBuffer;; Offset:   32
;       uint PrePadding_LocalVF_36;                   ; Offset:   36
;       uint BindlessResource_LocalVF_VertexFetch_PreSkinPositionBuffer;; Offset:   40
;       uint PrePadding_LocalVF_44;                   ; Offset:   44
;       uint BindlessResource_LocalVF_VertexFetch_PackedTangentsBuffer;; Offset:   48
;       uint PrePadding_LocalVF_52;                   ; Offset:   52
;       uint BindlessResource_LocalVF_VertexFetch_ColorComponentsBuffer;; Offset:   56
;   
;   } UniformBufferConstants_LocalVF;                 ; Offset:    0 Size:    60
;
; }
;
; Resource bind info for Scene_GPUScene_GPUSceneInstanceSceneData
; {
;
;   float4 $Element;                                  ; Offset:    0 Size:    16
;
; }
;
; Resource bind info for Scene_GPUScene_GPUScenePrimitiveSceneData
; {
;
;   float4 $Element;                                  ; Offset:    0 Size:    16
;
; }
;
; Resource bind info for InstanceCulling_InstanceIdsBuffer
; {
;
;   uint $Element;                                    ; Offset:    0 Size:     4
;
; }
;
; Resource bind info for InstanceCulling_PageInfoBuffer
; {
;
;   uint $Element;                                    ; Offset:    0 Size:     4
;
; }
;
; Resource bind info for ShadowDepthPass_PackedNaniteViews
; {
;
;   struct hostlayout.struct.FPackedNaniteView
;   {
;
;       row_major float4x4 SVPositionToTranslatedWorld;; Offset:    0
;       row_major float4x4 ViewToTranslatedWorld;     ; Offset:   64
;       row_major float4x4 TranslatedWorldToView;     ; Offset:  128
;       row_major float4x4 TranslatedWorldToClip;     ; Offset:  192
;       row_major float4x4 ViewToClip;                ; Offset:  256
;       row_major float4x4 ClipToRelativeWorld;       ; Offset:  320
;       row_major float4x4 PrevTranslatedWorldToView; ; Offset:  384
;       row_major float4x4 PrevTranslatedWorldToClip; ; Offset:  448
;       row_major float4x4 PrevViewToClip;            ; Offset:  512
;       row_major float4x4 PrevClipToRelativeWorld;   ; Offset:  576
;       int4 ViewRect;                                ; Offset:  640
;       float4 ViewSizeAndInvSize;                    ; Offset:  656
;       float4 ClipSpaceScaleOffset;                  ; Offset:  672
;       float3 RelativePreViewTranslation;            ; Offset:  688
;       float ViewTilePositionX;                      ; Offset:  700
;       float3 RelativePrevPreViewTranslation;        ; Offset:  704
;       float ViewTilePositionY;                      ; Offset:  716
;       float3 RelativeWorldCameraOrigin;             ; Offset:  720
;       float ViewTilePositionZ;                      ; Offset:  732
;       float3 DrawDistanceOriginTranslatedWorld;     ; Offset:  736
;       float RangeBasedCullingDistance;              ; Offset:  748
;       float3 ViewForward;                           ; Offset:  752
;       float NearPlane;                              ; Offset:  764
;       float4 TranslatedGlobalClipPlane;             ; Offset:  768
;       float3 MatrixTilePosition;                    ; Offset:  784
;       float Padding1;                               ; Offset:  796
;       float2 LODScales;                             ; Offset:  800
;       float MinBoundsRadiusSq;                      ; Offset:  808
;       uint StreamingPriorityCategory_AndFlags;      ; Offset:  812
;       int4 TargetLayerIdX_AndMipLevelY_AndNumMipLevelsZ;; Offset:  816
;       int4 HZBTestViewRect;                         ; Offset:  832
;   
;   } $Element;                                       ; Offset:    0 Size:   848
;
; }
;
; Resource bind info for ShadowDepthPass_PageRectBounds
; {
;
;   uint4 $Element;                                   ; Offset:    0 Size:    16
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; UniformBufferConstants_View       cbuffer      NA          NA     CB0            cb0     1
; UniformBufferConstants_Scene      cbuffer      NA          NA     CB1            cb1     1
; UniformBufferConstants_ShadowDepthPass   cbuffer      NA          NA     CB2            cb2     1
; UniformBufferConstants_LocalVF    cbuffer      NA          NA     CB3            cb3     1
; Scene_GPUScene_GPUSceneInstanceSceneData   texture  struct         r/o      T0             t0     1
; Scene_GPUScene_GPUScenePrimitiveSceneData   texture  struct         r/o      T1             t1     1
; InstanceCulling_InstanceIdsBuffer   texture  struct         r/o      T2             t2     1
; InstanceCulling_PageInfoBuffer    texture  struct         r/o      T3             t3     1
; ShadowDepthPass_PackedNaniteViews   texture  struct         r/o      T4             t4     1
; ShadowDepthPass_PageRectBounds    texture  struct         r/o      T5             t5     1
; LocalVF_VertexFetch_TexCoordBuffer   texture     f32         buf      T6             t6     1
; LocalVF_VertexFetch_PackedTangentsBuffer   texture     f32         buf      T7             t7     1
; LocalVF_VertexFetch_ColorComponentsBuffer   texture     f32         buf      T8             t8     1
;
;
; ViewId state:
;
; Number of inputs: 13, outputs: 32
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 4, 8, 12 }
;   output 1 depends on inputs: { 4, 8, 12 }
;   output 2 depends on inputs: { 4, 8, 12 }
;   output 4 depends on inputs: { 4, 8, 12 }
;   output 5 depends on inputs: { 4, 8, 12 }
;   output 6 depends on inputs: { 4, 8, 12 }
;   output 7 depends on inputs: { 4, 8, 12 }
;   output 8 depends on inputs: { 12 }
;   output 9 depends on inputs: { 12 }
;   output 10 depends on inputs: { 12 }
;   output 11 depends on inputs: { 12 }
;   output 12 depends on inputs: { 12 }
;   output 13 depends on inputs: { 12 }
;   output 16 depends on inputs: { 4, 8 }
;   output 17 depends on inputs: { 4, 8 }
;   output 21 depends on inputs: { 0, 1, 2, 4, 8 }
;   output 22 depends on inputs: { 0, 1, 2, 4, 8 }
;   output 23 depends on inputs: { 0, 1, 2, 4, 8 }
;   output 24 depends on inputs: { 0, 1, 2, 4, 8 }
;   output 25 depends on inputs: { 0, 1, 2, 4, 8 }
;   output 26 depends on inputs: { 0, 1, 2, 4, 8, 12 }
;   output 27 depends on inputs: { 0, 1, 2, 4, 8 }
;   output 28 depends on inputs: { 0, 1, 2, 4, 8 }
;   output 29 depends on inputs: { 0, 1, 2, 4, 8 }
;   output 30 depends on inputs: { 0, 1, 2, 4, 8 }
;   output 31 depends on inputs: { 0, 1, 2, 4, 8 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.ResBind = type { i32, i32, i32, i8 }
%dx.types.ResourceProperties = type { i32, i32 }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%dx.types.ResRet.i32 = type { i32, i32, i32, i32, i32 }
%"class.StructuredBuffer<vector<float, 4> >" = type { <4 x float> }
%"class.StructuredBuffer<unsigned int>" = type { i32 }
%"hostlayout.class.StructuredBuffer<FPackedNaniteView>" = type { %hostlayout.struct.FPackedNaniteView }
%hostlayout.struct.FPackedNaniteView = type { [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <4 x i32>, <4 x float>, <4 x float>, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <4 x float>, <3 x float>, float, <2 x float>, float, i32, <4 x i32>, <4 x i32> }
%"class.StructuredBuffer<vector<unsigned int, 4> >" = type { <4 x i32> }
%"class.Buffer<vector<float, 2> >" = type { <2 x float> }
%"class.Buffer<vector<float, 4> >" = type { <4 x float> }
%hostlayout.UniformBufferConstants_View = type { [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <4 x float>, <4 x float>, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <4 x float>, <4 x float>, <2 x float>, <2 x float>, <4 x float>, <4 x float>, <4 x i32>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <2 x float>, <2 x float>, i32, float, float, float, <4 x float>, <4 x float>, <4 x float>, <2 x float>, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, float, float, float, <4 x float>, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <4 x float>, float, float, float, float, float, float, float, float, float, float, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <3 x float>, float, <4 x float>, [4 x <4 x float>], <4 x float>, float, float, float, float, <4 x float>, float, float, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, <4 x float>, float, float, float, float, <4 x float>, [8 x <4 x float>], float, float, float, float, i32, float, float, float, <3 x float>, i32, [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], float, float, i32, i32, <3 x float>, float, <3 x float>, float, float, float, i32, float, float, float, float, float, <2 x i32>, float, float, <3 x float>, float, <3 x float>, float, <2 x float>, <2 x float>, <2 x float>, <2 x float>, <2 x float>, <2 x float>, float, float, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, float, float, float, float, [2 x <4 x float>], float, i32, i32, i32, i32, i32, i32, i32, <4 x float>, <2 x float>, float, float, <4 x float>, float, i32, float, float, <4 x float>, i32, i32, i32, float, <4 x float>, <4 x float>, <4 x float>, <3 x float>, float, i32, i32, i32, i32, [32 x <4 x i32>], i32, float, float, float, <4 x float>, <4 x float>, <4 x float>, <4 x float>, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <4 x float>, float, float, i32, i32, i32, i32, i32, i32, <4 x float>, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <3 x float>, float, <3 x float> }
%UniformBufferConstants_Scene = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%hostlayout.UniformBufferConstants_ShadowDepthPass = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, [4 x <4 x float>], [4 x <4 x float>], <4 x float>, float, float, float, float, [6 x [4 x <4 x float>]], [6 x [4 x <4 x float>]], i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%UniformBufferConstants_LocalVF = type { <4 x i32>, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }

define void @Main() {
  %1 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 8, i32 8, i32 0, i8 0 }, i32 8, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 7, i32 7, i32 0, i8 0 }, i32 7, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 6, i32 6, i32 0, i8 0 }, i32 6, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %4 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 5, i32 5, i32 0, i8 0 }, i32 5, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %5 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 4, i32 4, i32 0, i8 0 }, i32 4, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %6 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 3, i32 3, i32 0, i8 0 }, i32 3, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %7 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 2, i32 2, i32 0, i8 0 }, i32 2, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %8 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 0 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %9 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind zeroinitializer, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %10 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 3, i32 3, i32 0, i8 2 }, i32 3, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %11 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 2, i32 2, i32 0, i8 2 }, i32 2, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %12 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 2 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %13 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 2 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %14 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %10, %dx.types.ResourceProperties { i32 13, i32 60 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %15 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %11, %dx.types.ResourceProperties { i32 13, i32 1076 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %16 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %12, %dx.types.ResourceProperties { i32 13, i32 56 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %17 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %13, %dx.types.ResourceProperties { i32 13, i32 5484 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %18 = call i32 @dx.op.loadInput.i32(i32 4, i32 3, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %19 = call i32 @dx.op.loadInput.i32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %20 = call i32 @dx.op.loadInput.i32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %21 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef), !dx.precise !52  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %22 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 undef), !dx.precise !52  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %23 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 2, i32 undef), !dx.precise !52  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %24 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %16, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %25 = extractvalue %dx.types.CBufRet.i32 %24, 2
  %26 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %15, i32 7)  ; CBufferLoadLegacy(handle,regIndex)
  %27 = extractvalue %dx.types.CBufRet.f32 %26, 0
  %28 = extractvalue %dx.types.CBufRet.f32 %26, 1
  %29 = extractvalue %dx.types.CBufRet.f32 %26, 2
  %30 = extractvalue %dx.types.CBufRet.f32 %26, 3
  %31 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %15, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %32 = extractvalue %dx.types.CBufRet.f32 %31, 0
  %33 = extractvalue %dx.types.CBufRet.f32 %31, 1
  %34 = extractvalue %dx.types.CBufRet.f32 %31, 2
  %35 = extractvalue %dx.types.CBufRet.f32 %31, 3
  %36 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %15, i32 9)  ; CBufferLoadLegacy(handle,regIndex)
  %37 = extractvalue %dx.types.CBufRet.f32 %36, 0
  %38 = extractvalue %dx.types.CBufRet.f32 %36, 1
  %39 = extractvalue %dx.types.CBufRet.f32 %36, 2
  %40 = extractvalue %dx.types.CBufRet.f32 %36, 3
  %41 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %15, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %42 = extractvalue %dx.types.CBufRet.f32 %41, 0
  %43 = extractvalue %dx.types.CBufRet.f32 %41, 1
  %44 = extractvalue %dx.types.CBufRet.f32 %41, 2
  %45 = extractvalue %dx.types.CBufRet.f32 %41, 3
  %46 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %15, i32 11)  ; CBufferLoadLegacy(handle,regIndex)
  %47 = extractvalue %dx.types.CBufRet.f32 %46, 2
  %48 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %15, i32 12)  ; CBufferLoadLegacy(handle,regIndex)
  %49 = extractvalue %dx.types.CBufRet.f32 %48, 2
  %50 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %15, i32 13)  ; CBufferLoadLegacy(handle,regIndex)
  %51 = extractvalue %dx.types.CBufRet.f32 %50, 2
  %52 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %15, i32 15)  ; CBufferLoadLegacy(handle,regIndex)
  %53 = extractvalue %dx.types.CBufRet.f32 %52, 0
  %54 = extractvalue %dx.types.CBufRet.f32 %52, 1
  %55 = extractvalue %dx.types.CBufRet.f32 %52, 2
  %56 = extractvalue %dx.types.CBufRet.f32 %52, 3
  %57 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %15, i32 16)  ; CBufferLoadLegacy(handle,regIndex)
  %58 = extractvalue %dx.types.CBufRet.f32 %57, 0
  %59 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %15, i32 65)  ; CBufferLoadLegacy(handle,regIndex)
  %60 = extractvalue %dx.types.CBufRet.i32 %59, 0
  %61 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 60)  ; CBufferLoadLegacy(handle,regIndex)
  %62 = extractvalue %dx.types.CBufRet.f32 %61, 0
  %63 = extractvalue %dx.types.CBufRet.f32 %61, 1
  %64 = extractvalue %dx.types.CBufRet.f32 %61, 2
  %65 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %17, i32 72)  ; CBufferLoadLegacy(handle,regIndex)
  %66 = extractvalue %dx.types.CBufRet.f32 %65, 0
  %67 = extractvalue %dx.types.CBufRet.f32 %65, 1
  %68 = extractvalue %dx.types.CBufRet.f32 %65, 2
  %69 = add i32 %20, %19
  %70 = icmp slt i32 %20, 0
  br i1 %70, label %71, label %79

; <label>:71                                      ; preds = %0
  %72 = and i32 %20, 2147483647
  %73 = mul i32 %72, 41
  %74 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %8, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %75 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %74, i32 %73, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %76 = extractvalue %dx.types.ResRet.f32 %75, 1
  %77 = bitcast float %76 to i32
  %78 = add i32 %77, %19
  br label %84

; <label>:79                                      ; preds = %0
  %80 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %7, %dx.types.ResourceProperties { i32 12, i32 4 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=4>
  %81 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %80, i32 %69, i32 0, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %82 = extractvalue %dx.types.ResRet.i32 %81, 0
  %83 = and i32 %82, 16777215
  br label %84

; <label>:84                                      ; preds = %79, %71
  %85 = phi i32 [ %78, %71 ], [ %83, %79 ]
  %86 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %9, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %87 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %86, i32 %85, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %88 = extractvalue %dx.types.ResRet.f32 %87, 0
  %89 = bitcast float %88 to i32
  %90 = and i32 %89, 1048575
  %91 = icmp eq i32 %90, 1048575
  br i1 %91, label %210, label %92, !dx.controlflow.hints !53

; <label>:92                                      ; preds = %84
  %93 = mul nuw nsw i32 %90, 41
  %94 = add nuw nsw i32 %93, 1
  %95 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %8, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %96 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %95, i32 %94, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %97 = extractvalue %dx.types.ResRet.f32 %96, 0
  %98 = extractvalue %dx.types.ResRet.f32 %96, 1
  %99 = extractvalue %dx.types.ResRet.f32 %96, 2
  %100 = add i32 %85, %25
  %101 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %86, i32 %100, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %102 = extractvalue %dx.types.ResRet.f32 %101, 0
  %103 = extractvalue %dx.types.ResRet.f32 %101, 1
  %104 = extractvalue %dx.types.ResRet.f32 %101, 2
  %105 = extractvalue %dx.types.ResRet.f32 %101, 3
  %106 = bitcast float %102 to i32
  %107 = bitcast float %103 to i32
  %108 = bitcast float %104 to i32
  %109 = bitcast float %105 to i32
  %110 = shl i32 %25, 1
  %111 = add i32 %85, %110
  %112 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %86, i32 %111, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %113 = extractvalue %dx.types.ResRet.f32 %112, 0
  %114 = extractvalue %dx.types.ResRet.f32 %112, 1
  %115 = extractvalue %dx.types.ResRet.f32 %112, 2
  %116 = and i32 %106, 65535
  %117 = uitofp i32 %116 to float
  %118 = lshr i32 %106, 16
  %119 = uitofp i32 %118 to float
  %120 = and i32 %107, 32767
  %121 = uitofp i32 %120 to float
  %122 = fadd float %117, -3.276800e+04
  %123 = fadd float %119, -3.276800e+04
  %124 = fmul float %122, 0x3F00002000000000
  %125 = fmul float %123, 0x3F00002000000000
  %126 = fadd float %121, -1.638400e+04
  %127 = fmul float %126, 0x3F06A0F8E0000000
  %128 = and i32 %107, 32768
  %129 = icmp ne i32 %128, 0
  %130 = fadd float %124, %125
  %131 = fsub float %124, %125
  %132 = call float @dx.op.unary.f32(i32 6, float %130), !dx.precise !52  ; FAbs(value)
  %133 = call float @dx.op.unary.f32(i32 6, float %131), !dx.precise !52  ; FAbs(value)
  %134 = call float @dx.op.dot2.f32(i32 54, float 1.000000e+00, float 1.000000e+00, float %132, float %133), !dx.precise !52  ; Dot2(ax,ay,bx,by)
  %135 = fsub float 2.000000e+00, %134
  %136 = call float @dx.op.dot3.f32(i32 55, float %130, float %131, float %135, float %130, float %131, float %135), !dx.precise !52  ; Dot3(ax,ay,az,bx,by,bz)
  %137 = call float @dx.op.unary.f32(i32 25, float %136), !dx.precise !52  ; Rsqrt(value)
  %138 = fmul float %130, %137
  %139 = fmul float %131, %137
  %140 = fmul float %135, %137
  %141 = fadd float %140, 1.000000e+00
  %142 = fdiv float 1.000000e+00, %141
  %143 = fmul float %138, %139
  %144 = fmul float %142, %143
  %145 = fsub float -0.000000e+00, %144
  %146 = fmul float %138, %138
  %147 = fmul float %142, %146
  %148 = fsub float 1.000000e+00, %147
  %149 = fmul float %139, %139
  %150 = fmul float %142, %149
  %151 = fsub float 1.000000e+00, %150
  %152 = fmul float %127, %127
  %153 = fsub float 1.000000e+00, %152
  %154 = call float @dx.op.unary.f32(i32 24, float %153), !dx.precise !52  ; Sqrt(value)
  %155 = select i1 %129, float %127, float %154
  %156 = select i1 %129, float %154, float %127
  %157 = fmul float %155, %148
  %158 = fmul float %155, %145
  %159 = fmul float %138, %155
  %160 = fmul float %156, %145
  %161 = fmul float %156, %151
  %162 = fmul float %139, %156
  %163 = fsub float -0.000000e+00, %162
  %164 = fadd float %160, %157
  %165 = fadd float %158, %161
  %166 = fsub float %163, %159
  %167 = fmul float %139, %166
  %168 = fmul float %140, %165
  %169 = fsub float %167, %168
  %170 = fmul float %140, %164
  %171 = fmul float %138, %166
  %172 = fsub float %170, %171
  %173 = fmul float %138, %165
  %174 = fmul float %139, %164
  %175 = fsub float %173, %174
  %176 = lshr i32 %109, 16
  %177 = shl i32 %176, 23
  %178 = add i32 %177, -125829120
  %179 = bitcast i32 %178 to float
  %180 = lshr i32 %108, 16
  %181 = and i32 %108, 65535
  %182 = and i32 %109, 65535
  %183 = uitofp i32 %181 to float
  %184 = uitofp i32 %180 to float
  %185 = uitofp i32 %182 to float
  %186 = fadd float %183, -3.276800e+04
  %187 = fadd float %184, -3.276800e+04
  %188 = fadd float %185, -3.276800e+04
  %189 = fmul float %186, %179
  %190 = fmul float %187, %179
  %191 = fmul float %188, %179
  %192 = fmul float %189, %164
  %193 = fmul float %189, %165
  %194 = fmul float %189, %166
  %195 = fmul float %190, %169
  %196 = fmul float %190, %172
  %197 = fmul float %190, %175
  %198 = fmul float %191, %138
  %199 = fmul float %191, %139
  %200 = fmul float %191, %140
  %201 = call float @dx.op.unary.f32(i32 6, float %189), !dx.precise !52  ; FAbs(value)
  %202 = call float @dx.op.unary.f32(i32 6, float %190), !dx.precise !52  ; FAbs(value)
  %203 = call float @dx.op.unary.f32(i32 6, float %191), !dx.precise !52  ; FAbs(value)
  %204 = fdiv float 1.000000e+00, %201
  %205 = fdiv float 1.000000e+00, %202
  %206 = fdiv float 1.000000e+00, %203
  %207 = and i32 %89, 1048576
  %208 = icmp ne i32 %207, 0
  %209 = select i1 %208, float -1.000000e+00, float 1.000000e+00
  br label %210

; <label>:210                                     ; preds = %92, %84
  %211 = phi float [ %204, %92 ], [ 0.000000e+00, %84 ]
  %212 = phi float [ %205, %92 ], [ 0.000000e+00, %84 ]
  %213 = phi float [ %206, %92 ], [ 0.000000e+00, %84 ]
  %214 = phi float [ %209, %92 ], [ 0.000000e+00, %84 ]
  %215 = phi float [ %97, %92 ], [ 0.000000e+00, %84 ]
  %216 = phi float [ %98, %92 ], [ 0.000000e+00, %84 ]
  %217 = phi float [ %99, %92 ], [ 0.000000e+00, %84 ]
  %218 = phi float [ %192, %92 ], [ 0.000000e+00, %84 ]
  %219 = phi float [ %193, %92 ], [ 0.000000e+00, %84 ]
  %220 = phi float [ %194, %92 ], [ 0.000000e+00, %84 ]
  %221 = phi float [ %195, %92 ], [ 0.000000e+00, %84 ]
  %222 = phi float [ %196, %92 ], [ 0.000000e+00, %84 ]
  %223 = phi float [ %197, %92 ], [ 0.000000e+00, %84 ]
  %224 = phi float [ %198, %92 ], [ 0.000000e+00, %84 ]
  %225 = phi float [ %199, %92 ], [ 0.000000e+00, %84 ]
  %226 = phi float [ %200, %92 ], [ 0.000000e+00, %84 ]
  %227 = phi float [ %113, %92 ], [ 0.000000e+00, %84 ]
  %228 = phi float [ %114, %92 ], [ 0.000000e+00, %84 ]
  %229 = phi float [ %115, %92 ], [ 0.000000e+00, %84 ]
  %230 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %14, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %231 = extractvalue %dx.types.CBufRet.i32 %230, 3
  %232 = add i32 %231, %18
  %233 = extractvalue %dx.types.CBufRet.i32 %230, 0
  %234 = and i32 %232, %233
  %235 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 10, i32 1033 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<4xF32>
  %236 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %235, i32 %234, i32 undef)  ; BufferLoad(srv,index,wot)
  %237 = extractvalue %dx.types.ResRet.f32 %236, 0
  %238 = extractvalue %dx.types.ResRet.f32 %236, 1
  %239 = extractvalue %dx.types.ResRet.f32 %236, 2
  %240 = extractvalue %dx.types.ResRet.f32 %236, 3
  %241 = shl i32 %232, 1
  %242 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %2, %dx.types.ResourceProperties { i32 10, i32 1033 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<4xF32>
  %243 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %242, i32 %241, i32 undef)  ; BufferLoad(srv,index,wot)
  %244 = extractvalue %dx.types.ResRet.f32 %243, 0
  %245 = extractvalue %dx.types.ResRet.f32 %243, 1
  %246 = extractvalue %dx.types.ResRet.f32 %243, 2
  %247 = or i32 %241, 1
  %248 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %242, i32 %247, i32 undef)  ; BufferLoad(srv,index,wot)
  %249 = extractvalue %dx.types.ResRet.f32 %248, 0
  %250 = extractvalue %dx.types.ResRet.f32 %248, 1
  %251 = extractvalue %dx.types.ResRet.f32 %248, 2
  %252 = extractvalue %dx.types.ResRet.f32 %248, 3
  %253 = fmul float %246, %250
  %254 = fmul float %245, %251
  %255 = fsub float %253, %254
  %256 = fmul float %244, %251
  %257 = fmul float %246, %249
  %258 = fsub float %256, %257
  %259 = fmul float %245, %249
  %260 = fmul float %244, %250
  %261 = fsub float %259, %260
  %262 = fmul float %252, %255
  %263 = fmul float %252, %258
  %264 = fmul float %252, %261
  %265 = fmul float %251, %263
  %266 = fmul float %250, %264
  %267 = fsub float %265, %266
  %268 = fmul float %249, %264
  %269 = fmul float %251, %262
  %270 = fsub float %268, %269
  %271 = fmul float %250, %262
  %272 = fmul float %249, %263
  %273 = fsub float %271, %272
  %274 = fmul float %252, %267
  %275 = fmul float %252, %270
  %276 = fmul float %252, %273
  %277 = fmul float %211, %218
  %278 = fmul float %211, %219
  %279 = fmul float %211, %220
  %280 = fmul float %212, %221
  %281 = fmul float %212, %222
  %282 = fmul float %212, %223
  %283 = fmul float %213, %224
  %284 = fmul float %213, %225
  %285 = fmul float %213, %226
  %286 = fmul float %277, %274
  %287 = call float @dx.op.tertiary.f32(i32 46, float %275, float %280, float %286), !dx.precise !52  ; FMad(a,b,c)
  %288 = call float @dx.op.tertiary.f32(i32 46, float %276, float %283, float %287), !dx.precise !52  ; FMad(a,b,c)
  %289 = fmul float %278, %274
  %290 = call float @dx.op.tertiary.f32(i32 46, float %275, float %281, float %289), !dx.precise !52  ; FMad(a,b,c)
  %291 = call float @dx.op.tertiary.f32(i32 46, float %276, float %284, float %290), !dx.precise !52  ; FMad(a,b,c)
  %292 = fmul float %279, %274
  %293 = call float @dx.op.tertiary.f32(i32 46, float %275, float %282, float %292), !dx.precise !52  ; FMad(a,b,c)
  %294 = call float @dx.op.tertiary.f32(i32 46, float %276, float %285, float %293), !dx.precise !52  ; FMad(a,b,c)
  %295 = fmul float %277, %249
  %296 = call float @dx.op.tertiary.f32(i32 46, float %250, float %280, float %295), !dx.precise !52  ; FMad(a,b,c)
  %297 = call float @dx.op.tertiary.f32(i32 46, float %251, float %283, float %296), !dx.precise !52  ; FMad(a,b,c)
  %298 = fmul float %278, %249
  %299 = call float @dx.op.tertiary.f32(i32 46, float %250, float %281, float %298), !dx.precise !52  ; FMad(a,b,c)
  %300 = call float @dx.op.tertiary.f32(i32 46, float %251, float %284, float %299), !dx.precise !52  ; FMad(a,b,c)
  %301 = fmul float %279, %249
  %302 = call float @dx.op.tertiary.f32(i32 46, float %250, float %282, float %301), !dx.precise !52  ; FMad(a,b,c)
  %303 = call float @dx.op.tertiary.f32(i32 46, float %251, float %285, float %302), !dx.precise !52  ; FMad(a,b,c)
  %304 = fmul fast float %252, %214
  %305 = fmul float %21, %218
  %306 = fmul float %21, %219
  %307 = fmul float %21, %220
  %308 = fmul float %22, %221
  %309 = fmul float %22, %222
  %310 = fmul float %22, %223
  %311 = fadd float %305, %308
  %312 = fadd float %306, %309
  %313 = fadd float %307, %310
  %314 = fmul float %23, %224
  %315 = fmul float %23, %225
  %316 = fmul float %23, %226
  %317 = fadd float %311, %314
  %318 = fadd float %312, %315
  %319 = fadd float %313, %316
  %320 = fadd float %66, %227
  %321 = fadd float %67, %228
  %322 = fadd float %68, %229
  %323 = fsub float %215, %62
  %324 = fsub float %216, %63
  %325 = fsub float %217, %64
  %326 = fmul float %323, 2.097152e+06
  %327 = fmul float %324, 2.097152e+06
  %328 = fmul float %325, 2.097152e+06
  %329 = fadd float %326, %320
  %330 = fadd float %327, %321
  %331 = fadd float %328, %322
  %332 = fadd float %317, %329
  %333 = fadd float %318, %330
  %334 = fadd float %319, %331
  %335 = extractvalue %dx.types.CBufRet.i32 %230, 1
  %336 = add i32 %335, -1
  %337 = call i32 @dx.op.binary.i32(i32 40, i32 0, i32 %336)  ; UMin(a,b)
  %338 = mul i32 %232, %335
  %339 = add i32 %338, %337
  %340 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %3, %dx.types.ResourceProperties { i32 10, i32 521 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<2xF32>
  %341 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %340, i32 %339, i32 undef)  ; BufferLoad(srv,index,wot)
  %342 = extractvalue %dx.types.ResRet.f32 %341, 0
  %343 = extractvalue %dx.types.ResRet.f32 %341, 1
  %344 = fadd float %332, 0.000000e+00
  %345 = fadd float %333, 0.000000e+00
  %346 = fadd float %334, 0.000000e+00
  %347 = fmul float %27, %344
  %348 = call float @dx.op.tertiary.f32(i32 46, float %345, float %32, float %347), !dx.precise !52  ; FMad(a,b,c)
  %349 = call float @dx.op.tertiary.f32(i32 46, float %346, float %37, float %348), !dx.precise !52  ; FMad(a,b,c)
  %350 = call float @dx.op.tertiary.f32(i32 46, float 1.000000e+00, float %42, float %349), !dx.precise !52  ; FMad(a,b,c)
  %351 = fmul float %28, %344
  %352 = call float @dx.op.tertiary.f32(i32 46, float %345, float %33, float %351), !dx.precise !52  ; FMad(a,b,c)
  %353 = call float @dx.op.tertiary.f32(i32 46, float %346, float %38, float %352), !dx.precise !52  ; FMad(a,b,c)
  %354 = call float @dx.op.tertiary.f32(i32 46, float 1.000000e+00, float %43, float %353), !dx.precise !52  ; FMad(a,b,c)
  %355 = fmul float %29, %344
  %356 = call float @dx.op.tertiary.f32(i32 46, float %345, float %34, float %355), !dx.precise !52  ; FMad(a,b,c)
  %357 = call float @dx.op.tertiary.f32(i32 46, float %346, float %39, float %356), !dx.precise !52  ; FMad(a,b,c)
  %358 = call float @dx.op.tertiary.f32(i32 46, float 1.000000e+00, float %44, float %357), !dx.precise !52  ; FMad(a,b,c)
  %359 = fmul float %30, %344
  %360 = call float @dx.op.tertiary.f32(i32 46, float %345, float %35, float %359), !dx.precise !52  ; FMad(a,b,c)
  %361 = call float @dx.op.tertiary.f32(i32 46, float %346, float %40, float %360), !dx.precise !52  ; FMad(a,b,c)
  %362 = call float @dx.op.tertiary.f32(i32 46, float 1.000000e+00, float %45, float %361), !dx.precise !52  ; FMad(a,b,c)
  %363 = fcmp ogt float %58, 0.000000e+00
  %364 = fcmp ogt float %358, %362
  %365 = and i1 %363, %364
  %366 = select i1 %365, float 0x3FEFFFFDE0000000, float %358
  %367 = select i1 %365, float 1.000000e+00, float %362
  %368 = call float @dx.op.dot3.f32(i32 55, float %47, float %49, float %51, float %297, float %300, float %303), !dx.precise !52  ; Dot3(ax,ay,az,bx,by,bz)
  %369 = call float @dx.op.unary.f32(i32 6, float %368), !dx.precise !52  ; FAbs(value)
  %370 = call float @dx.op.unary.f32(i32 6, float %369), !dx.precise !52  ; FAbs(value)
  %371 = fcmp ogt float %370, 0.000000e+00
  %372 = fmul float %369, %369
  %373 = fsub float 1.000000e+00, %372
  %374 = call float @dx.op.unary.f32(i32 7, float %373), !dx.precise !52  ; Saturate(value)
  %375 = call float @dx.op.unary.f32(i32 24, float %374), !dx.precise !52  ; Sqrt(value)
  %376 = fdiv float %375, %369
  %377 = select i1 %371, float %376, float %55
  %378 = call float @dx.op.binary.f32(i32 35, float %377, float 0.000000e+00), !dx.precise !52  ; FMax(a,b)
  %379 = call float @dx.op.binary.f32(i32 36, float %378, float %55), !dx.precise !52  ; FMin(a,b)
  %380 = fmul float %54, %379
  %381 = fadd float %53, %380
  %382 = fmul float %56, %366
  %383 = fsub float 1.000000e+00, %382
  %384 = fadd float %383, %381
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %288)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %291)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %294)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float 0.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 0, float %297)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 1, float %300)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 2, float %303)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 3, float %304)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 0, float %239)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 1, float %238)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 2, float %237)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 3, float %240)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 0, float %342)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 1, float %343)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 2, float 0.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 3, float 0.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.i32(i32 5, i32 4, i32 0, i8 0, i32 %90)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 6, i32 0, i8 0, float %344)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 6, i32 0, i8 1, float %345)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 6, i32 0, i8 2, float %346)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 5, i32 0, i8 0, float 0.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  %385 = icmp eq i32 %60, 0
  br i1 %385, label %506, label %386

; <label>:386                                     ; preds = %210
  %387 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %6, %dx.types.ResourceProperties { i32 12, i32 4 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=4>
  %388 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %387, i32 %69, i32 0, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %389 = extractvalue %dx.types.ResRet.i32 %388, 0
  %390 = and i32 %389, 65535
  %391 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %5, %dx.types.ResourceProperties { i32 524, i32 848 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=848>
  %392 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %391, i32 %390, i32 192, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %393 = extractvalue %dx.types.ResRet.f32 %392, 0
  %394 = extractvalue %dx.types.ResRet.f32 %392, 1
  %395 = extractvalue %dx.types.ResRet.f32 %392, 2
  %396 = extractvalue %dx.types.ResRet.f32 %392, 3
  %397 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %391, i32 %390, i32 208, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %398 = extractvalue %dx.types.ResRet.f32 %397, 0
  %399 = extractvalue %dx.types.ResRet.f32 %397, 1
  %400 = extractvalue %dx.types.ResRet.f32 %397, 2
  %401 = extractvalue %dx.types.ResRet.f32 %397, 3
  %402 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %391, i32 %390, i32 224, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %403 = extractvalue %dx.types.ResRet.f32 %402, 0
  %404 = extractvalue %dx.types.ResRet.f32 %402, 1
  %405 = extractvalue %dx.types.ResRet.f32 %402, 2
  %406 = extractvalue %dx.types.ResRet.f32 %402, 3
  %407 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %391, i32 %390, i32 240, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %408 = extractvalue %dx.types.ResRet.f32 %407, 0
  %409 = extractvalue %dx.types.ResRet.f32 %407, 1
  %410 = extractvalue %dx.types.ResRet.f32 %407, 2
  %411 = extractvalue %dx.types.ResRet.f32 %407, 3
  %412 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %391, i32 %390, i32 688, i8 7, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %413 = extractvalue %dx.types.ResRet.f32 %412, 0
  %414 = extractvalue %dx.types.ResRet.f32 %412, 1
  %415 = extractvalue %dx.types.ResRet.f32 %412, 2
  %416 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %391, i32 %390, i32 700, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %417 = extractvalue %dx.types.ResRet.f32 %416, 0
  %418 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %391, i32 %390, i32 716, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %419 = extractvalue %dx.types.ResRet.f32 %418, 0
  %420 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %391, i32 %390, i32 732, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %421 = extractvalue %dx.types.ResRet.f32 %420, 0
  %422 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %391, i32 %390, i32 816, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %423 = extractvalue %dx.types.ResRet.i32 %422, 0
  %424 = extractvalue %dx.types.ResRet.i32 %422, 1
  %425 = fsub fast float %62, %417
  %426 = fsub fast float %63, %419
  %427 = fsub fast float %64, %421
  %428 = fmul fast float %425, 2.097152e+06
  %429 = fmul fast float %426, 2.097152e+06
  %430 = fmul fast float %427, 2.097152e+06
  %431 = fsub fast float %332, %66
  %432 = fadd fast float %431, %413
  %433 = fadd fast float %432, %428
  %434 = fsub fast float %333, %67
  %435 = fadd fast float %434, %414
  %436 = fadd fast float %435, %429
  %437 = fsub fast float %334, %68
  %438 = fadd fast float %437, %415
  %439 = fadd fast float %438, %430
  %440 = fmul fast float %433, %393
  %441 = call float @dx.op.tertiary.f32(i32 46, float %436, float %398, float %440)  ; FMad(a,b,c)
  %442 = call float @dx.op.tertiary.f32(i32 46, float %439, float %403, float %441)  ; FMad(a,b,c)
  %443 = fadd fast float %442, %408
  %444 = fmul fast float %433, %394
  %445 = call float @dx.op.tertiary.f32(i32 46, float %436, float %399, float %444)  ; FMad(a,b,c)
  %446 = call float @dx.op.tertiary.f32(i32 46, float %439, float %404, float %445)  ; FMad(a,b,c)
  %447 = fadd fast float %446, %409
  %448 = fmul fast float %433, %395
  %449 = call float @dx.op.tertiary.f32(i32 46, float %436, float %400, float %448)  ; FMad(a,b,c)
  %450 = call float @dx.op.tertiary.f32(i32 46, float %439, float %405, float %449)  ; FMad(a,b,c)
  %451 = fadd fast float %450, %410
  %452 = fmul fast float %433, %396
  %453 = call float @dx.op.tertiary.f32(i32 46, float %436, float %401, float %452)  ; FMad(a,b,c)
  %454 = call float @dx.op.tertiary.f32(i32 46, float %439, float %406, float %453)  ; FMad(a,b,c)
  %455 = fadd fast float %454, %411
  %456 = fcmp fast ogt float %451, %455
  %457 = and i1 %363, %456
  %458 = select i1 %457, float 0x3FEFFFFDE0000000, float %451
  %459 = select i1 %457, float 1.000000e+00, float %455
  %460 = fadd fast float %459, %443
  %461 = fsub fast float %459, %447
  %462 = fmul fast float %461, 5.000000e-01
  %463 = and i32 %424, 31
  %464 = lshr i32 16384, %463
  %465 = uitofp i32 %464 to float
  %466 = fmul fast float %465, 5.000000e-01
  %467 = fmul fast float %466, %460
  %468 = fmul fast float %462, %465
  %469 = sub nsw i32 0, %424
  %470 = sitofp i32 %469 to float
  %471 = call float @dx.op.unary.f32(i32 21, float %470)  ; Exp(value)
  %472 = fmul fast float %471, %443
  %473 = fmul fast float %471, %447
  %474 = fadd fast float %471, -1.000000e+00
  %475 = fsub fast float 1.000000e+00, %471
  %476 = fmul fast float %459, %474
  %477 = fmul fast float %459, %475
  %478 = fadd fast float %476, %472
  %479 = fadd fast float %477, %473
  %480 = shl i32 %423, 3
  %481 = add nsw i32 %480, %424
  %482 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %4, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %483 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %482, i32 %481, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %484 = extractvalue %dx.types.ResRet.i32 %483, 0
  %485 = extractvalue %dx.types.ResRet.i32 %483, 1
  %486 = extractvalue %dx.types.ResRet.i32 %483, 2
  %487 = extractvalue %dx.types.ResRet.i32 %483, 3
  %488 = shl i32 %484, 7
  %489 = shl i32 %485, 7
  %490 = uitofp i32 %488 to float
  %491 = uitofp i32 %489 to float
  %492 = fmul fast float %490, %459
  %493 = fmul fast float %491, %459
  %494 = fsub fast float %467, %492
  %495 = fsub fast float %468, %493
  %496 = shl i32 %486, 7
  %497 = add i32 %496, 128
  %498 = shl i32 %487, 7
  %499 = add i32 %498, 128
  %500 = uitofp i32 %497 to float
  %501 = uitofp i32 %499 to float
  %502 = fmul fast float %500, %459
  %503 = fmul fast float %501, %459
  %504 = fsub fast float %502, %467
  %505 = fsub fast float %503, %468
  br label %506

; <label>:506                                     ; preds = %386, %210
  %507 = phi float [ %494, %386 ], [ 1.000000e+00, %210 ]
  %508 = phi float [ %495, %386 ], [ 1.000000e+00, %210 ]
  %509 = phi float [ %504, %386 ], [ 1.000000e+00, %210 ]
  %510 = phi float [ %505, %386 ], [ 1.000000e+00, %210 ]
  %511 = phi float [ %478, %386 ], [ %350, %210 ]
  %512 = phi float [ %479, %386 ], [ %354, %210 ]
  %513 = phi float [ %458, %386 ], [ %384, %210 ]
  %514 = phi float [ %459, %386 ], [ %367, %210 ]
  %515 = phi i32 [ %389, %386 ], [ 0, %210 ]
  call void @dx.op.storeOutput.i32(i32 5, i32 7, i32 0, i8 0, i32 %515)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 8, i32 0, i8 0, float %511)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 8, i32 0, i8 1, float %512)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 8, i32 0, i8 2, float %513)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 8, i32 0, i8 3, float %514)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 9, i32 0, i8 0, float %507)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 9, i32 0, i8 1, float %508)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 9, i32 0, i8 2, float %509)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 9, i32 0, i8 3, float %510)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.loadInput.i32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind
declare void @dx.op.storeOutput.i32(i32, i32, i32, i8, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32, %dx.types.Handle, i32, i32, i8, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32, %dx.types.Handle, i32, i32, i8, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32, %dx.types.Handle, i32, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.dot2.f32(i32, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.binary.i32(i32, i32, i32) #0

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.annotateHandle(i32, %dx.types.Handle, %dx.types.ResourceProperties) #0

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromBinding(i32, %dx.types.ResBind, i32, i1) #0

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.viewIdState = !{!24}
!dx.entryPoints = !{!25}

!0 = !{!"dxc(private) 1.7.0.0 (private, 00000000)"}
!1 = !{i32 1, i32 6}
!2 = !{i32 1, i32 7}
!3 = !{!"vs", i32 6, i32 6}
!4 = !{!5, null, !19, null}
!5 = !{!6, !8, !9, !11, !12, !14, !15, !17, !18}
!6 = !{i32 0, %"class.StructuredBuffer<vector<float, 4> >"* undef, !"", i32 0, i32 0, i32 1, i32 12, i32 0, !7}
!7 = !{i32 1, i32 16}
!8 = !{i32 1, %"class.StructuredBuffer<vector<float, 4> >"* undef, !"", i32 0, i32 1, i32 1, i32 12, i32 0, !7}
!9 = !{i32 2, %"class.StructuredBuffer<unsigned int>"* undef, !"", i32 0, i32 2, i32 1, i32 12, i32 0, !10}
!10 = !{i32 1, i32 4}
!11 = !{i32 3, %"class.StructuredBuffer<unsigned int>"* undef, !"", i32 0, i32 3, i32 1, i32 12, i32 0, !10}
!12 = !{i32 4, %"hostlayout.class.StructuredBuffer<FPackedNaniteView>"* undef, !"", i32 0, i32 4, i32 1, i32 12, i32 0, !13}
!13 = !{i32 1, i32 848}
!14 = !{i32 5, %"class.StructuredBuffer<vector<unsigned int, 4> >"* undef, !"", i32 0, i32 5, i32 1, i32 12, i32 0, !7}
!15 = !{i32 6, %"class.Buffer<vector<float, 2> >"* undef, !"", i32 0, i32 6, i32 1, i32 10, i32 0, !16}
!16 = !{i32 0, i32 9}
!17 = !{i32 7, %"class.Buffer<vector<float, 4> >"* undef, !"", i32 0, i32 7, i32 1, i32 10, i32 0, !16}
!18 = !{i32 8, %"class.Buffer<vector<float, 4> >"* undef, !"", i32 0, i32 8, i32 1, i32 10, i32 0, !16}
!19 = !{!20, !21, !22, !23}
!20 = !{i32 0, %hostlayout.UniformBufferConstants_View* undef, !"", i32 0, i32 0, i32 1, i32 5484, null}
!21 = !{i32 1, %UniformBufferConstants_Scene* undef, !"", i32 0, i32 1, i32 1, i32 56, null}
!22 = !{i32 2, %hostlayout.UniformBufferConstants_ShadowDepthPass* undef, !"", i32 0, i32 2, i32 1, i32 1076, null}
!23 = !{i32 3, %UniformBufferConstants_LocalVF* undef, !"", i32 0, i32 3, i32 1, i32 60, null}
!24 = !{[15 x i32] [i32 13, i32 32, i32 -2097152, i32 -2097152, i32 -2097152, i32 0, i32 -1900297, i32 0, i32 0, i32 0, i32 -1900297, i32 0, i32 0, i32 0, i32 67125239]}
!25 = !{void ()* @Main, !"Main", !26, !4, !51}
!26 = !{!27, !36, null}
!27 = !{!28, !31, !34, !35}
!28 = !{i32 0, !"ATTRIBUTE", i8 9, i8 0, !29, i8 0, i32 1, i8 4, i32 0, i8 0, !30}
!29 = !{i32 0}
!30 = !{i32 3, i32 7}
!31 = !{i32 1, !"ATTRIBUTE", i8 5, i8 0, !32, i8 0, i32 1, i8 1, i32 1, i8 0, !33}
!32 = !{i32 13}
!33 = !{i32 3, i32 1}
!34 = !{i32 2, !"SV_InstanceID", i8 5, i8 2, !29, i8 0, i32 1, i8 1, i32 2, i8 0, !33}
!35 = !{i32 3, !"SV_VertexID", i8 5, i8 1, !29, i8 0, i32 1, i8 1, i32 3, i8 0, !33}
!36 = !{!37, !39, !40, !41, !42, !43, !45, !47, !49, !50}
!37 = !{i32 0, !"TEXCOORD10_centroid", i8 9, i8 0, !29, i8 2, i32 1, i8 4, i32 0, i8 0, !38}
!38 = !{i32 3, i32 15}
!39 = !{i32 1, !"TEXCOORD11_centroid", i8 9, i8 0, !29, i8 2, i32 1, i8 4, i32 1, i8 0, !38}
!40 = !{i32 2, !"COLOR", i8 9, i8 0, !29, i8 2, i32 1, i8 4, i32 2, i8 0, !38}
!41 = !{i32 3, !"TEXCOORD", i8 9, i8 0, !29, i8 2, i32 1, i8 4, i32 3, i8 0, !38}
!42 = !{i32 4, !"PRIMITIVE_ID", i8 5, i8 0, !29, i8 1, i32 1, i8 1, i32 4, i8 0, !33}
!43 = !{i32 5, !"TEXCOORD", i8 9, i8 0, !44, i8 2, i32 1, i8 1, i32 5, i8 0, !33}
!44 = !{i32 6}
!45 = !{i32 6, !"TEXCOORD", i8 9, i8 0, !46, i8 2, i32 1, i8 3, i32 5, i8 1, !30}
!46 = !{i32 7}
!47 = !{i32 7, !"TEXCOORD", i8 5, i8 0, !48, i8 1, i32 1, i8 1, i32 4, i8 1, !33}
!48 = !{i32 8}
!49 = !{i32 8, !"SV_Position", i8 9, i8 3, !29, i8 4, i32 1, i8 4, i32 6, i8 0, !38}
!50 = !{i32 9, !"SV_ClipDistance", i8 9, i8 6, !29, i8 2, i32 1, i8 4, i32 7, i8 0, !38}
!51 = !{i32 0, i64 16, i32 5, !29}
!52 = !{i32 1}
!53 = distinct !{!53, !"dx.controlflow.hints", i32 1}
